@page "/blog"
@using Microsoft.EntityFrameworkCore
@inject AppDbContext _db

<PageTitle>Blog</PageTitle>


<div class="mb-3">
    <label class="form-label">Title</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogTitle" />
</div>

<div class="mb-3">
    <label class="form-label">Author</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogAuthor" />
</div>

<div class="mb-3">
    <label class="form-label">Content</label>
    <input type="text" class="form-control" @bind-value="requestModel.BlogContent" />
</div>
<button type="button" class="btn btn-dark" @onclick="Cancel">Cancel</button>
<button type="button" class="btn btn-success" @onclick="Save">Save</button>

@if(lst is not null)
{
    int count = 0;
    <table class="table">
        <thead>
            <tr>
                <td>No.</td>
                <td>Id</td>
                <td>Title</td>
                <td>Author</td>
                <td>Content</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in lst)
            {
                <tr>
                    <td>@(++count)</td>
                    <td>@item.BlogId</td>
                    <td>@item.BlogTitle</td>
                    <td>@item.BlogAuthor</td>
                    <td>@item.BlogContent</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private BlogModel requestModel = new();
    private List<BlogModel>? lst;

    protected override async Task OnInitializedAsync()
    {
        await List();
    }

    private async Task List()
    {
        lst = await _db.Blogs.ToListAsync();
    }

    private async Task Save()
    {
        await _db.Blogs.AddAsync(requestModel);
        await _db.SaveChangesAsync();

        requestModel = new();
        await List();
    }

    private void Cancel()
    {
        requestModel = new();
    }
}
